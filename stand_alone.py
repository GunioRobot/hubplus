
# This code for running in "stand-alone" mode (ie. without hubspace_compatibility)

class TgGroup(models.Model):
    id = models.IntegerField(primary_key=True)
    group_name = models.CharField(unique=True, max_length=40)
    display_name = models.CharField(max_length=255)
    created = models.DateTimeField()
    place = models.ForeignKey(Location)
    level = models.CharField(max_length=9)
    class Meta:
        db_table = u'tg_group'

class TgUser(models.Model):
    id = models.IntegerField(primary_key=True)
    user_name = models.CharField(unique=True, max_length=255)
    email_address = models.CharField(unique=True, max_length=255)
    active = models.SmallIntegerField()
    display_name = models.CharField(max_length=255)
    first_name = models.CharField(max_length=255)
    last_name = models.CharField(max_length=255)
    title = models.CharField(max_length=255)
    organisation = models.CharField(max_length=255)
    mobile = models.CharField(max_length=30)
    work = models.CharField(max_length=30)
    home = models.CharField(max_length=30)
    fax = models.CharField(max_length=30)
    password = models.CharField(max_length=40)
    created = models.DateTimeField()
    email2 = models.CharField(max_length=255)
    email3 = models.CharField(max_length=255)
    address = models.TextField()
    skype_id = models.TextField()
    sip_id = models.TextField()
    website = models.TextField()
    homeplace = models.ForeignKey(Location)
    cops = models.TextField() # This field type is a guess.
    bristol_metadata = models.TextField() # This field type is a guess.
    handset = models.TextField()
    ext = models.TextField()
    frank_pin = models.TextField()
    gb_storage = models.TextField()
    os = models.TextField()
    storage_loc = models.TextField()
    description = models.TextField()
    billto = models.ForeignKey('self')
    bill_to_profile = models.SmallIntegerField()
    bill_to_company = models.TextField()
    billingaddress = models.TextField()
    bill_phone = models.TextField()
    bill_fax = models.TextField()
    bill_email = models.TextField()
    bill_company_no = models.TextField()
    bill_vat_no = models.TextField()
    child_name = models.TextField()
    mimetype = models.TextField()
    unix_hash = models.CharField(max_length=50)
    lanman_hash = models.CharField(max_length=50)
    nt_hash = models.CharField(max_length=50)
    outstanding = models.DecimalField(max_digits=10, decimal_places=2)
    reminder_counter = models.IntegerField()
    last_reminder = models.DateTimeField()
    reminderkey = models.CharField(max_length=50)
    image_mimetype = models.CharField(max_length=15)
    welcome_sent = models.SmallIntegerField()
    signedby = models.ForeignKey('self')
    hostcontact = models.ForeignKey('self')
    public_field = models.SmallIntegerField()
    modified = models.DateTimeField()
    rfid = models.CharField(max_length=40)
    access_policies = models.TextField() # This field type is a guess.
    disabled_policies = models.TextField() # This field type is a guess.
    username = models.CharField(max_length=30)
    email = models.CharField(max_length=75)
    is_staff = models.BooleanField()
    is_active = models.BooleanField()
    is_superuser = models.BooleanField()
    last_login = models.DateField()
    date_joined = models.DateField()
    class Meta:
        db_table = u'tg_user'
